{"version":3,"file":"static/js/595.2c20fbf4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieList/MoviesList.module.css?7a3b","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/pages/MovieSearch/MovieSearch.module.css?d7a7","components/SearchForm.jsx","pages/MovieSearch/MovieSearch.jsx","services/fetchMoviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__xKiKf\",\"title\":\"MoviesList_title__sVjy2\",\"item\":\"MoviesList_item__n8d3i\",\"link\":\"MoviesList_link__5UpDO\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ movies, titlePage = null }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {titlePage && <h1 className={css.title}>{titlePage}</h1>}\n\n      <ul className={css.list}>\n        {movies.map(({ id, title, name }) => (\n          <li key={id} className={css.item}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: location }}\n              className={css.link}\n            >\n              {title || name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired\n  ),\n  titlePage: PropTypes.string,\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MovieSearch_form__D9lls\",\"input\":\"MovieSearch_input__CJqU8\",\"submit\":\"MovieSearch_submit__o0Ah1\"};","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport css from '../pages/MovieSearch/MovieSearch.module.css';\n\nconst SearchForm = ({ handleSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [inputSearch, setInputSearch] = useState(query);\n\n  const handleInputChange = e => {\n    setInputSearch(e.currentTarget.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const queryNormalized = form.query.value.toLowerCase().trim();\n\n    setSearchParams({ query: queryNormalized });\n    // form.reset();\n    handleSubmit();\n  };\n\n  return (\n    <form onSubmit={onSubmit} className={css.form}>\n      <input\n        type=\"text\"\n        name=\"query\"\n        className={css.input}\n        value={inputSearch}\n        onChange={handleInputChange}\n        placeholder=\"Enter movie name\"\n      />\n\n      <button type=\"submit\" className={css.submit}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import { useEffect, useState } from 'react';\nimport * as API from '../../services/fetchMoviesApi';\nimport MoviesList from '../../components/MovieList/MovieList';\nimport SearchForm from '../../components/SearchForm';\n\nconst MovieSearch = () => {\n  const [movies, setMovie] = useState(null);\n  const [totalRezultMovie, setTotalRezMovie] = useState(null);\n\n  useEffect(() => {\n    const searchParams = new URLSearchParams(window.location.search);\n    const query = searchParams.get('query') ?? '';\n\n    if (query === '') return;\n\n    setMovie(null);\n    setTotalRezMovie(null);\n\n    API.getMoviesQuery(query)\n      .then(data => {\n        setMovie(data.results);\n        setTotalRezMovie(data.total_results);\n      })\n      .catch(console.log);\n  }, []);\n\n  const handleSubmit = () => {\n    const searchParams = new URLSearchParams(window.location.search);\n    const query = searchParams.get('query') ?? '';\n\n    if (query === '') return;\n\n    setMovie(null);\n    setTotalRezMovie(null);\n\n    API.getMoviesQuery(query)\n      .then(data => {\n        setMovie(data.results);\n        setTotalRezMovie(data.total_results);\n      })\n      .catch(console.log);\n  };\n\n  return (\n    <>\n      <SearchForm handleSubmit={handleSubmit} />\n\n      {movies && <MoviesList movies={movies} />}\n\n      {totalRezultMovie === 0 && <div>Not found movies</div>}\n    </>\n  );\n};\n\nexport default MovieSearch;\n","import axios from 'axios';\n\nconst KEY = '6064d97228286d71f89b1fb6aaea0bd6';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMoviesQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["movies","titlePage","location","useLocation","className","css","map","id","title","name","to","state","from","handleSubmit","useSearchParams","searchParams","setSearchParams","query","get","useState","inputSearch","setInputSearch","onSubmit","e","preventDefault","queryNormalized","target","value","toLowerCase","trim","type","onChange","currentTarget","placeholder","setMovie","totalRezultMovie","setTotalRezMovie","useEffect","URLSearchParams","window","search","API","then","data","results","total_results","catch","console","log","KEY","BASE_URL","getTrandingMovies","axios","response","getMoviesQuery","getMovieById","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}